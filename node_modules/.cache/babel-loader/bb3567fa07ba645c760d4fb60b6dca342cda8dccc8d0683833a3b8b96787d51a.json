{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst items = localStorage.getItem(\"cartItems\") !== null ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst initialState = {\n  value: items\n};\nexport const cartItemsSlice = createSlice({\n  name: 'cartItems',\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const newItem = action.payload;\n      const duplicate = findItem(state.value, newItem);\n      if (duplicate.length > 0) {\n        state.value = delItem(state.value, newItem);\n        state.value = [...state.value, {\n          ...newItem,\n          id: duplicate[0].id,\n          quantity: newItem.quantity + duplicate[0].quantity\n        }];\n      } else {\n        state.value = [...state.value, {\n          ...newItem,\n          id: state.value.length > 0 ? state.value[state.value.length - 1].id + 1 : 1\n        }];\n      }\n      localStorage.setItem('cartItems', JSON.stringify(sortItems(state.value)));\n      console.log(state.value);\n    }\n  }\n});\nconst findItem = (arr, item) => arr.filter(e => e.slug === item.slug && e.color === item.color && e.size === item.size);\nconst delItem = (arr, item) => arr.filter(e => e.slug !== item.slug || e.color !== item.color || e.size !== item.size);\nconst sortItems = arr => arr.sort((a, b) => a.id > b.id ? 1 : a.id < b.id ? -1 : 0);\nexport const {\n  addItem\n} = cartItemsSlice.actions;\nexport default cartItemsSlice.reducer;","map":{"version":3,"names":["createSlice","items","localStorage","getItem","JSON","parse","initialState","value","cartItemsSlice","name","reducers","addItem","state","action","newItem","payload","duplicate","findItem","length","delItem","id","quantity","setItem","stringify","sortItems","console","log","arr","item","filter","e","slug","color","size","sort","a","b","actions","reducer"],"sources":["C:/Users/DuongNguyen/Desktop/yolo/src/redux/shopping-cart/cartItemSlices.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst items = localStorage.getItem(\"cartItems\") !== null ? JSON.parse(localStorage.getItem(\"cartItems\")) : []\r\nconst initialState = { value: items }\r\nexport const cartItemsSlice = createSlice({\r\n    name: 'cartItems',\r\n    initialState,\r\n    reducers: {\r\n        addItem: (state, action) => {\r\n            const newItem = action.payload\r\n\r\n            const duplicate = findItem(state.value, newItem)\r\n\r\n            if (duplicate.length > 0) {\r\n                state.value = delItem(state.value, newItem);\r\n\r\n                state.value = [...state.value, {\r\n                    ...newItem,\r\n                    id: duplicate[0].id,\r\n                    quantity: newItem.quantity + duplicate[0].quantity,\r\n                }]\r\n            } else {\r\n                state.value = [...state.value, {\r\n                    ...newItem,\r\n                    id: state.value.length > 0 ? state.value[state.value.length - 1].id + 1 : 1\r\n                }]\r\n            }\r\n\r\n            localStorage.setItem('cartItems', JSON.stringify(sortItems(state.value)));\r\n            console.log(state.value);\r\n        }\r\n    }\r\n})\r\nconst findItem = (arr, item) => arr.filter(e => e.slug === item.slug && e.color === item.color && e.size === item.size)\r\nconst delItem = (arr, item) => arr.filter(e => e.slug !== item.slug || e.color !== item.color || e.size !== item.size)\r\n\r\n\r\nconst sortItems = (arr) => arr.sort((a, b) => a.id > b.id ? 1 : (a.id < b.id ? -1 : 0))\r\n\r\nexport const { addItem } = cartItemsSlice.actions\r\n\r\nexport default cartItemsSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,KAAK,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE;AAC7G,MAAMG,YAAY,GAAG;EAAEC,KAAK,EAAEN;AAAM,CAAC;AACrC,OAAO,MAAMO,cAAc,GAAGR,WAAW,CAAC;EACtCS,IAAI,EAAE,WAAW;EACjBH,YAAY;EACZI,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAE9B,MAAMC,SAAS,GAAGC,QAAQ,CAACL,KAAK,CAACL,KAAK,EAAEO,OAAO,CAAC;MAEhD,IAAIE,SAAS,CAACE,MAAM,GAAG,CAAC,EAAE;QACtBN,KAAK,CAACL,KAAK,GAAGY,OAAO,CAACP,KAAK,CAACL,KAAK,EAAEO,OAAO,CAAC;QAE3CF,KAAK,CAACL,KAAK,GAAG,CAAC,GAAGK,KAAK,CAACL,KAAK,EAAE;UAC3B,GAAGO,OAAO;UACVM,EAAE,EAAEJ,SAAS,CAAC,CAAC,CAAC,CAACI,EAAE;UACnBC,QAAQ,EAAEP,OAAO,CAACO,QAAQ,GAAGL,SAAS,CAAC,CAAC,CAAC,CAACK;QAC9C,CAAC,CAAC;MACN,CAAC,MAAM;QACHT,KAAK,CAACL,KAAK,GAAG,CAAC,GAAGK,KAAK,CAACL,KAAK,EAAE;UAC3B,GAAGO,OAAO;UACVM,EAAE,EAAER,KAAK,CAACL,KAAK,CAACW,MAAM,GAAG,CAAC,GAAGN,KAAK,CAACL,KAAK,CAACK,KAAK,CAACL,KAAK,CAACW,MAAM,GAAG,CAAC,CAAC,CAACE,EAAE,GAAG,CAAC,GAAG;QAC9E,CAAC,CAAC;MACN;MAEAlB,YAAY,CAACoB,OAAO,CAAC,WAAW,EAAElB,IAAI,CAACmB,SAAS,CAACC,SAAS,CAACZ,KAAK,CAACL,KAAK,CAAC,CAAC,CAAC;MACzEkB,OAAO,CAACC,GAAG,CAACd,KAAK,CAACL,KAAK,CAAC;IAC5B;EACJ;AACJ,CAAC,CAAC;AACF,MAAMU,QAAQ,GAAGA,CAACU,GAAG,EAAEC,IAAI,KAAKD,GAAG,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKH,IAAI,CAACG,IAAI,IAAID,CAAC,CAACE,KAAK,KAAKJ,IAAI,CAACI,KAAK,IAAIF,CAAC,CAACG,IAAI,KAAKL,IAAI,CAACK,IAAI,CAAC;AACvH,MAAMd,OAAO,GAAGA,CAACQ,GAAG,EAAEC,IAAI,KAAKD,GAAG,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKH,IAAI,CAACG,IAAI,IAAID,CAAC,CAACE,KAAK,KAAKJ,IAAI,CAACI,KAAK,IAAIF,CAAC,CAACG,IAAI,KAAKL,IAAI,CAACK,IAAI,CAAC;AAGtH,MAAMT,SAAS,GAAIG,GAAG,IAAKA,GAAG,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACf,EAAE,GAAGgB,CAAC,CAAChB,EAAE,GAAG,CAAC,GAAIe,CAAC,CAACf,EAAE,GAAGgB,CAAC,CAAChB,EAAE,GAAG,CAAC,CAAC,GAAG,CAAE,CAAC;AAEvF,OAAO,MAAM;EAAET;AAAQ,CAAC,GAAGH,cAAc,CAAC6B,OAAO;AAEjD,eAAe7B,cAAc,CAAC8B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}